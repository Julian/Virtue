[tox]
envlist =
    py36
    py37
    py38
    pypy2
    pypy3
    build
    readme
    safety
    secrets
    style
    docs-{dirhtml,doctest,linkcheck,spelling,style}
skipsdist = True

[testenv]
setenv =
changedir = {envtmpdir}
commands =
    {envpython} -m pip install {toxinidir}
    {envpython} -m virtue {posargs:virtue}
    {envpython} -m doctest {toxinidir}/README.rst
deps =
    codecov,coverage: coverage
    codecov: codecov

    perf: pyperf

[testenv:coverage]
setenv =
    {[testenv]setenv}
    COVERAGE_FILE={envtmpdir}/coverage-data
commands =
    {envpython} -m pip install {toxinidir}
    {envpython} -m coverage run --rcfile={toxinidir}/.coveragerc -m virtue virtue
    {envpython} -m coverage report --rcfile={toxinidir}/.coveragerc --show-missing
    {envpython} -m coverage html --directory={envtmpdir}/htmlcov --rcfile={toxinidir}/.coveragerc {posargs}

[testenv:build]
deps = build
commands = {envpython} -m build {toxinidir} --outdir {envtmpdir}/dist

[testenv:bandit]
deps = bandit
commands = {envpython} -m bandit --recursive virtue

[testenv:readme]
deps =
    build
    twine
commands =
    {envpython} -m build --outdir {envtmpdir}/dist {toxinidir}
    {envpython} -m twine check {envtmpdir}/dist/*

[testenv:safety]
deps = safety
commands =
    {envpython} -m pip install {toxinidir}
    {envpython} -m safety check

[testenv:secrets]
deps = detect-secrets
commands = {envbindir}/detect-secrets scan {toxinidir}

[testenv:style]
deps = flake8
commands =
    {envpython} -m flake8 {posargs} --max-complexity 10 {toxinidir}/virtue {toxinidir}/docs

[testenv:docs-dirhtml]
commands = {envpython} -m sphinx -b dirhtml {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps =
    -r{toxinidir}/docs/requirements.txt
    {toxinidir}

[testenv:docs-doctest]
commands = {envpython} -m sphinx -b doctest {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps =
    -r{toxinidir}/docs/requirements.txt
    {toxinidir}

[testenv:docs-linkcheck]
commands = {envpython} -m sphinx -b linkcheck {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps =
    -r{toxinidir}/docs/requirements.txt
    {toxinidir}

[testenv:docs-spelling]
commands = {envpython} -m sphinx -b spelling {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -T -W}
deps =
    -r{toxinidir}/docs/requirements.txt
    {toxinidir}

[testenv:docs-style]
commands = doc8 {posargs} {toxinidir}/docs
deps =
    doc8
    pygments
    pygments-github-lexers

[testenv:codecov]
passenv = CODECOV* CI
setenv =
    {[testenv]setenv}
    COVERAGE_DEBUG_FILE={envtmpdir}/coverage-debug
    COVERAGE_FILE={envtmpdir}/coverage-data
commands =
    {envpython} -m pip install {toxinidir}
    {envpython} -m coverage run --rcfile={toxinidir}/.coveragerc -m virtue virtue
    {envpython} -m coverage xml -o {envtmpdir}/coverage.xml
    {envpython} -m codecov --required --disable gcov --file {envtmpdir}/coverage.xml

[testenv:perf]
commands =
    {envpython} -m pip install {toxinidir}
    {envpython} -m pyperf command {posargs} {envpython} -m virtue virtue
